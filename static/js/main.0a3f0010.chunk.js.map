{"version":3,"sources":["components/UserItem.jsx","components/UserList.jsx","components/UserAddForm.jsx","components/PostItem.jsx","components/PostList.jsx","components/Scroll.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserItem","props","name","email","img","isGoldClient","src","alt","UserList","this","users","map","user","index","React","Component","UserAddForm","state","event","value","target","setState","checked","preventDefault","updateUsers","className","onSubmit","handleSubmit","htmlFor","type","id","onChange","handleNameChange","handleEmailChange","handleIsGoldClient","PostItem","title","body","PostList","posts","post","Scroll","style","overflowY","border","height","children","App","backgroundColor","textColor","displayUsers","fetch","then","response","json","userList","filteredUser","filter","postList","filteredPosts","eventDetails","userColor","newUser","prevState","console","log","color","handleBackgroundChange","handleTextChange","onClick","clickUserButton","clickPostButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3f0010.chunk.js","sourcesContent":["import React from 'react';\n\nfunction UserItem(props) {\n    const {name, email, img, isGoldClient} = props;\n    return(\n        <div >\n            <p >{name}</p>\n            <p>{email}</p>\n            <img src={img} alt=\"user\"/>\n            { isGoldClient \n                ? <p>Client GOLD</p> \n                : null\n            }\n        </div>\n    )\n}\n\nexport default UserItem;","import React from 'react';\nimport UserItem from './UserItem';\n\nclass UserList extends React.Component {\n    render() {\n        return(\n            <div>\n                {this.props.users.map((user, index) => {\n                        return(\n                            <UserItem \n                                key={index}\n                                name={user.name} \n                                email={user.email} \n                                img='https://upload.wikimedia.org/wikipedia/commons/5/5f/User_with_smile.svg' \n                                isGoldClient={user.isGoldClient }\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default UserList;\n\n","import React from 'react';\nimport './UserAddForm.css';\n\nclass UserAddForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            isGoldClient: false\n        }\n    }\n\n    handleNameChange(event) {\n        const value = event.target.value;\n        this.setState({name: value});\n    }\n\n    handleEmailChange(event) {\n        const value = event.target.value;\n        this.setState({email: value});\n    }\n\n    handleIsGoldClient(event) {\n        const value = event.target.checked;\n        this.setState({isGoldClient: value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            isGoldClient: this.state.isGoldClient\n        }\n        this.props.updateUsers(user);\n    }\n\n    render() {\n        return(\n            <form className=\"form\" onSubmit={(event) => {this.handleSubmit(event)}}>\n                <label htmlFor=\"name\">Name:</label>\n                <input \n                    type=\"text\" \n                    id=\"name\" \n                    onChange={(event) => {this.handleNameChange(event)}}\n                    value={this.state.name}>\n                </input>\n                <label htmlFor=\"email\">Email:</label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    onChange={(event) => {this.handleEmailChange(event)}}\n                    value={this.state.email}>\n                </input>\n                <label htmlFor=\"is-gold-client\">Is Gold Client</label>\n                <input \n                    type=\"checkbox\" \n                    id=\"is-gold-client\" \n                    onChange={(event) => {this.handleIsGoldClient(event)}}\n                    checked={this.state.isGoldClient}>\n                </input>\n                <input id=\"add-user\" type=\"submit\" value=\"Add User\"></input>\n            </form>\n        )\n    }\n}\n\nexport default UserAddForm;","import React from 'react'\n\nfunction PostItem(props) {\n    const {title, body} = props;\n    return (\n        <div>\n            <h2>{title}</h2>\n            <p>{body}</p>\n        </div>\n    )\n}\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from './PostItem';\n\nclass PostList extends React.Component {\n    render() {\n        return(\n            <div>\n                {this.props.posts.map((post, index) => {\n                        return(\n                            <PostItem \n                                key={index}\n                                title={post.title} \n                                body={post.body} \n                            />\n                        )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default PostList;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '2px solid #6495ED ', height: '817px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\nimport './App.css';\nimport UserList from './components/UserList';\nimport UserAddForm from './components/UserAddForm';\nimport PostList from './components/PostList';\nimport Scroll from './components/Scroll';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state={\n      backgroundColor: 'rgba(225,255,255)',\n      textColor: 'black',\n      users: [],\n      posts: [],\n      displayUsers: true\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(userList => {\n        const filteredUser = userList.filter((user) => user.id <= 5)\n        this.setState({users: filteredUser})\n      })\n\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(postList => {\n        const filteredPosts = postList.filter((post) => post.id <= 5)\n        this.setState({posts: filteredPosts})\n      })\n  }\n\n  handleBackgroundChange(eventDetails) {\n    const userColor = eventDetails.target.value;\n    this.setState({backgroundColor: userColor});\n  }\n\n  handleTextChange(eventDetails) {\n    const textColor = eventDetails.target.value;\n    this.setState({textColor: textColor});\n  }\n \n  updateUsers(newUser) {\n    this.setState((prevState) => {\n      return{\n        users: [\n          ...prevState.users,\n          newUser\n        ]\n      }\n    });\n  }\n\n  clickUserButton() {\n    this.setState({displayUsers: true})\n    console.log(this.setState.displayUsers)\n  }\n\n  clickPostButton() {\n    this.setState({displayUsers: false})\n    console.log(this.setState.displayUsers)\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{backgroundColor: this.state.backgroundColor, color:this.state.textColor}}>\n        <div className=\"add-user\">\n          <UserAddForm updateUsers={(user) => {this.updateUsers(user)}}/>\n          <div className=\"change-color\">\n          <label htmlFor=\"change-user-color\"> Change background color</label>\n          <input \n            id=\"change-user-color\" \n            type=\"color\" \n            onChange={(eventDetails) => {this.handleBackgroundChange(eventDetails)}}\n          />\n          <label htmlFor=\"change-text-color\"> Change background color</label>\n          <input \n            id=\"change-text-color\" \n            type=\"color\" \n            onChange={(eventDetails) => {this.handleTextChange(eventDetails)}}\n          />\n          </div>\n        </div>\n\n        <Scroll>\n          <div className=\"list\">\n            <h1>User list / Post list</h1>\n            <div className=\"button\">\n              <button onClick={() => this.clickUserButton()}>Show Users</button>\n              <button onClick={() => this.clickPostButton()}>Show Posts</button>\n            </div>\n            {\n              this.state.displayUsers\n                ? <UserList users={this.state.users}/>\n                : <PostList posts={this.state.posts}/>\n            }\n          </div>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}